const axios = require('axios');

async function fetchFromAI(url, params) {
 try {
 const response = await axios.get(url, { params });
 return response.data;
 } catch (error) {
 console.error(error);
 return null;
 }
}

async function getAIResponse(input, userId, messageID) {
 const services = [
 { url: 'https://ai-tools.replit.app/gpt', params: { prompt: input, uid: userId } },
 { url: 'https://openaikey-x20f.onrender.com/api', params: { prompt: input } },
 { url: 'http://fi1.bot-hosting.net:6518/gpt', params: { query: input } },
 { url: 'https://ai-chat-gpt-4-lite.onrender.com/api/hercai', params: { question: input } }
 ];

 let response = "Please give prompt please  \n\n follow https://m.me/lordjaydenSmith.1 üç∑";
 let currentIndex = 0;

 for (let i = 0; i < services.length; i++) {
 const service = services[currentIndex];
 const data = await fetchFromAI(service.url, service.params);
 if (data && (data.gpt4 || data.reply || data.response)) {
 response = data.gpt4 || data.reply || data.response;
 break;
 }
 currentIndex = (currentIndex + 1) % services.length; // Move to the next service in the cycle
 }

 return { response, messageID };
}

module.exports = {
 config: {
 name: 'ai',
 author: 'ùóùùóîùó¨ùóóùóòùó° ùó¶ùó†ùóúùóßùóõ',
 role: 0,
 category: 'ai',
 shortDescription: 'ai to ask anything',
 },
 onStart: async function ({ api, event, arns }) {
 const input = args.join(' ').trim();
 if (!input) {
 api.sendMessage(``, event.threadID, event.messageID);
 return;
 }

const fonts = {

 mathsans: {

 a: "ùêö", b: "ùêõ", c: "ùêú", d: "ùêù", e: "ùê´", f: "ùêü", g: "ùê†", h: "ùê°", i: "ùê¢",

 j: "ùê£", k: "ùê§", l: "ùê•", m: "ùê¶", n: "ùêß", o: "ùê®", p: "ùê©", q: "ùê™", r: "ùê´",

 s: "ùê¨", t: "ùê≠", u: "ùêÆ", v: "ùêØ", w: "ùê∞", x: "ùê±", y: "ùê≤", z: "ùê≥",

 A: "ùêÄ", B: "ùêÅ", C: "ùêÇ", D: "ùêÉ", E: "ùêÑ", F: "ùêÖ", G: "ùêÜ", H: "ùêá", I: "ùêà",

 J: "ùêâ", K: "ùêä", L: "ùêã", M: "ùêå", N: "ùêç", O: "ùêé", P: "ùêè", Q: "ùêê", R: "ùêë",

 S: "ùêí", T: "ùêì", U: "ùêî", V: "ùêï", W: "ùêñ", X: "ùêó", Y: "ùêò", Z: "ùêô",
 }
};

 
 const { response, messageID } = await getAIResponse(input, event.senderID, event.messageID);
 api.sendMessage(` ${response} `, event.threadID, messageID);
 },
 onChat: async function ({ event, message }) {
 const messageContent = event.body.trim().toLowerCase();
 if (messageContent.startsWith("ai")) {
 const input = messageContent.replace(/^ai\s*/, "").trim();
 const { response, messageID } = await getAIResponse(input, event.senderID, message.messageID);
 message.reply(`ùóùùóîùó¨ùóóùóòùó° ùó¶ùó†ùóúùóßùóõ \n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n${response}`, messageID);
 }
 }
};
  
